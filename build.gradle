group 'com.imiku'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories{
    maven{ url"http://maven.aliyun.com/nexus/content/groups/public"}
}

configurations {
    mybatisGenerator
}

    def prop = new Properties();
    file("src/main/resources/properties/jdbc.properties")
            .withInputStream {
        prop.load(it)
    }
    file("src/main/resources/properties/gradle.properties")
            .withInputStream {
        prop.load(it)
    }
    prop.each {
        project.extensions.add("$it.key",it.value);
    }

dependencies {

    compile 'org.springframework:spring-beans:4.1.7.RELEASE'
    compile 'org.springframework:spring-web:4.1.7.RELEASE'
    compile 'org.springframework:spring-webmvc:4.1.7.RELEASE'
    compile 'org.springframework:spring-tx:4.1.7.RELEASE'
    compile 'org.springframework:spring-test:4.0.5.RELEASE'
    compile 'org.springframework:spring-jdbc:4.1.7.RELEASE'
    compile 'org.springframework:spring-context:4.1.7.RELEASE'
    compile 'org.springframework:spring-context-support:4.1.7.RELEASE'

    compile 'org.apache.tomcat:tomcat-servlet-api:8.0.24'
    compile 'jstl:jstl:1.2'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    compile 'org.apache.logging.log4j:log4j-api:2.8.1'
    compile 'org.apache.logging.log4j:log4j-core:2.8.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'

    compile 'org.apache.shiro:shiro-core:1.3.2'
    compile 'org.apache.shiro:shiro-web:1.3.2'
    compile 'org.apache.shiro:shiro-ehcache:1.3.2'
    compile 'org.apache.shiro:shiro-quartz:1.3.2'
    compile 'org.apache.shiro:shiro-spring:1.3.2'

    compile 'com.alibaba:druid:1.0.15'
    compile 'org.aspectj:aspectjweaver:1.8.6'
    compile 'mysql:mysql-connector-java:5.1.38'
    compile 'org.mybatis:mybatis-spring:1.2.3'
    compile 'org.mybatis:mybatis:3.3.0'
    compile 'com.github.pagehelper:pagehelper:5.0.0'
    compile 'junit:junit:4.12'
    compile 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    compile 'com.alibaba:fastjson:1.2.29'
    compile 'org.apache.commons:commons-lang3:3.5'

    compile 'commons-collections:commons-collections:3.2.2'
    compile 'commons-beanutils:commons-beanutils:1.9.3'

    compile "org.apache.httpcomponents:httpclient:4.5.2"
    compile "org.apache.httpcomponents:httpmime:4.5.2"

    providedCompile 'javax.servlet:servlet-api:2.5'

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.38'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task mybatisGenerate << {
    ant.properties['targetProject'] = projectDir.path
    ant.properties['jarDirection'] = project['jarDirection']
    ant.properties['driverClass'] = project['driver']
    ant.properties['connectionURL'] = project['url']
    ant.properties['userId'] = project['username']
    ant.properties['password'] = project['password']
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = project['modelPackage']
    ant.properties['mapperPackage'] = project['mapperPackage']
    ant.properties['sqlMapperPackage'] = project['sqlMapperPackage']

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )

    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis-generator/generatorConfig.xml',
            verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'jarDirection')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
